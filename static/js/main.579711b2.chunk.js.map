{"version":3,"sources":["components/user-card.tsx","components/input.tsx","components/select.tsx","components/search.tsx","components/user-list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserCard","user","className","src","avatar","first_name","last_name","email","Input","onSearch","type","placeholder","onChange","e","target","value","Select","onSort","Search","UserList","defaultUserArray","useState","users","setUsers","sortedUsers","setSortedUsers","useEffect","fetch","then","res","json","data","searchTerm","sort","filter","includes","sortTerm","sorted","newUsers","a","b","toUpperCase","localeCompare","console","log","id","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAsBeA,EAVE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAChB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,IAAKF,EAAKG,SACf,+BAAKH,EAAKI,WAAV,IAAuBJ,EAAKK,aAC5B,6BAAKL,EAAKM,YCFPC,EARD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACb,OACI,8BACI,uBAAOC,KAAK,OAAOC,YAAY,SAASC,SAAU,SAACC,GAAD,OAAMJ,EAASI,EAAEC,OAAOC,aCSvEC,EAbA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACd,OACI,8BACI,yBAAQL,SAAU,SAACC,GAAD,OAAOI,EAAOJ,EAAEC,OAAOC,QAAzC,UACI,8CACA,gDACA,+CACA,8CCQDG,EAXA,SAAC,GAAiC,IAA/BT,EAA8B,EAA9BA,SAAUQ,EAAoB,EAApBA,OACxB,OACI,8BACI,iCACI,cAAC,EAAD,CAAOR,SAAUA,IACjB,cAAC,EAAD,CAAQQ,OAAQA,UCyEjBE,EA3EE,WAEb,IAAIC,EAA2B,GAFZ,EAGKC,mBAASD,GAHd,mBAGdE,EAHc,KAGPC,EAHO,OAIiBF,mBAASD,GAJ1B,mBAIdI,EAJc,KAIDC,EAJC,OAKOJ,mBAAS,IALhB,6BAQnBK,qBAAW,WACPC,MAAM,2CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACFP,EAASO,EAAKC,MACdN,EAAeK,EAAKC,WAEzB,IAoDH,OACI,sBAAK7B,UAAU,YAAf,UACI,cAAC,EAAD,CAAQO,SApDC,SAACuB,GAEd,IAAIC,EAAOX,EAAMY,QAAQ,SAACjC,GACtB,QAAIA,EAAKI,WAAW8B,SAASH,OAGzB/B,EAAKK,UAAU6B,SAASH,MAGxB/B,EAAKM,MAAM4B,SAASH,OAK5BP,EAAeQ,IAsCiBhB,OAnCrB,SAACmB,GACZ,IAAIC,EAEAC,EAAQ,YAAQd,GACpB,OAAOY,GACH,IAAK,aACDC,EAASC,EAASL,MAAK,SAACM,EAAGC,GACvB,OAAOD,EAAElC,WAAWoC,cAAcC,cAAcF,EAAEnC,WAAWoC,kBAEjEhB,EAAeY,GACfM,QAAQC,IAAIP,GACZ,MACJ,IAAK,YACDA,EAASC,EAASL,MAAK,SAACM,EAAGC,GACvB,OAAOD,EAAEjC,UAAUmC,cAAcC,cAAcF,EAAElC,UAAUmC,kBAE/DhB,EAAeY,GACfM,QAAQC,IAAIP,GACZ,MACJ,IAAK,KACDA,EAASC,EAASL,MAAK,SAACM,EAAGC,GACvB,OAAOD,EAAEM,GAAKL,EAAEK,MAEpBpB,EAAeY,GACfd,EAASc,GACTM,QAAQC,IAAIP,OAWfb,EAAYsB,KAAI,SAAC7C,GAAD,OAAgB,cAAC,EAAD,CAAUA,KAAMA,W,MC/D9C8C,MAdf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACE,0DAEA,cAAC,EAAD,QCGS8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.579711b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ninterface Props {\r\n    user: {\r\n        email: string,\r\n        id: number,\r\n        first_name: string,\r\n        last_name: string,\r\n        avatar: string\r\n    }\r\n}\r\n\r\nconst UserCard = ({ user }: Props) => {\r\n    return (\r\n        <div className=\"user-card\">\r\n            <img src={user.avatar} />\r\n            <h3>{user.first_name} {user.last_name}</h3>\r\n            <h4>{user.email}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\n\r\n\r\ninterface Props {\r\n    onSearch: (s: string) => void\r\n}\r\n\r\nconst Input = ({ onSearch }: Props) => {\r\n    return (\r\n        <div>\r\n            <input type=\"text\" placeholder=\"search\" onChange={(e)=> onSearch(e.target.value)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\ninterface Props {\r\n    onSort: (s: string) => void\r\n}\r\n\r\nconst Select = ({ onSort }: Props) => {\r\n    return (\r\n        <div>\r\n            <select onChange={(e) => onSort(e.target.value)}>\r\n                <option>Sort By:</option>\r\n                <option>First Name</option>\r\n                <option>Last Name</option>\r\n                <option>Id</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import React from 'react'\r\n\r\nimport Input from './input'\r\nimport Select from './select'\r\n\r\ninterface Props {\r\n    onSearch: (s: string) => void,\r\n    onSort: (s: string) => void\r\n}\r\n\r\nconst Search = ({ onSearch, onSort }: Props) => {\r\n    return (\r\n        <div>\r\n            <form>\r\n                <Input onSearch={onSearch}/>\r\n                <Select onSort={onSort}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useEffect, useState } from 'react'\r\n\r\nimport UserCard from './user-card'\r\nimport Search from './search'\r\n\r\ninterface User {\r\n    email: string,\r\n    id: number,\r\n    first_name: string,\r\n    last_name: string,\r\n    avatar: string\r\n}\r\n\r\nconst UserList = () => {\r\n\r\n    let defaultUserArray: User[] = []\r\n    let [users, setUsers] = useState(defaultUserArray)\r\n    let [sortedUsers, setSortedUsers] = useState(defaultUserArray)\r\n    let [search, setSearch] = useState(\"\")\r\n\r\n\r\n    useEffect( () => {\r\n        fetch('https://reqres.in/api/users?per_page=20')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            setUsers(json.data)\r\n            setSortedUsers(json.data)\r\n        })\r\n    }, [])\r\n\r\n    const onSearch = (searchTerm: string) => {\r\n\r\n        let sort = users.filter( (user: User) => {\r\n            if (user.first_name.includes(searchTerm)) {\r\n                return true\r\n            }\r\n            if (user.last_name.includes(searchTerm)) {\r\n                return true\r\n            }\r\n            if (user.email.includes(searchTerm)) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n        setSortedUsers(sort)\r\n    }\r\n\r\n    const onSort = (sortTerm: string) => {\r\n        let sorted: User[]\r\n        //need to create a new users array to sort, since the reference needs to change for the DOM to update\r\n        let newUsers = [ ...sortedUsers ]\r\n        switch(sortTerm) {\r\n            case \"First Name\":\r\n                sorted = newUsers.sort((a, b) => {\r\n                    return a.first_name.toUpperCase().localeCompare(b.first_name.toUpperCase())\r\n                })\r\n                setSortedUsers(sorted)\r\n                console.log(sorted)\r\n                break\r\n            case \"Last Name\":\r\n                sorted = newUsers.sort((a, b) => {\r\n                    return a.last_name.toUpperCase().localeCompare(b.last_name.toUpperCase())\r\n                })\r\n                setSortedUsers(sorted)\r\n                console.log(sorted)\r\n                break\r\n            case \"Id\":\r\n                sorted = newUsers.sort((a, b) => {\r\n                    return a.id - b.id\r\n                })\r\n                setSortedUsers(sorted)\r\n                setUsers(sorted)\r\n                console.log(sorted)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='user-list'>\r\n            <Search onSearch={onSearch} onSort={onSort}/>\r\n            {sortedUsers.map((user: User) => <UserCard user={user} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList","import React from 'react';\n\nimport UserList from './components/user-list'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Typescript User Searcher</h1>\n\n      <UserList />\n\n      {/* <footer>\n        <h5>dawn cronin 2021</h5>\n      </footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}